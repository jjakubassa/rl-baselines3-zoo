[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rl_zoo3"
dynamic = ["version"]
description = "A Training Framework for Stable Baselines3 Reinforcement Learning Agents"
readme = "README.md"
authors = [{ name = "Antonin Raffin", email = "antonin.raffin@dlr.de" }]
license = { text = "MIT" }
requires-python = ">=3.10"
keywords = [
    "reinforcement-learning-algorithms",
    "reinforcement-learning",
    "machine-learning",
    "gymnasium",
    "openai",
    "stable",
    "baselines",
    "sb3",
    "toolbox",
    "python",
    "data-science",
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "box2d-py==2.3.8",
    "cloudpickle>=2.2.1",
    "gunicorn>=23.0.0",
    "gym==0.26.2",
    "huggingface-sb3>=3.0",
    "jumanji[train,mandl]",
    "moviepy>=1.0.0",
    "optuna-dashboard>=0.18.0",
    "optuna-fast-fanova>=0.0.4",
    "optunahub>=0.2.0",
    "plotly>=6.0.1",
    "pudb>=2024.1.3",
    "pytablewriter>=1.2.1",
    "seaborn>=0.13.2",
    "stable-baselines3[docs,extra,tests]>=2.6.0,<3.0",
    "wandb>=0.19.8",
]


[project.urls]
Code = "https://github.com/DLR-RM/rl-baselines3-zoo"
Documentation = "https://rl-baselines3-zoo.readthedocs.io/en/master/"
Changelog = "https://github.com/DLR-RM/rl-baselines3-zoo/blob/master/CHANGELOG.md"
"Stable-Baselines3" = "https://github.com/DLR-RM/stable-baselines3"
"RL-Zoo" = "https://github.com/DLR-RM/rl-baselines3-zoo"
SBX = "https://github.com/araffin/sbx"

[project.scripts]
rl_zoo3 = "rl_zoo3.cli:main"

[tool.setuptools.package-data]
rl_zoo3 = ["py.typed", "version.txt", "hyperparams/*.yml"]

[tool.ruff]
line-length = 127
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "B", "UP", "C90", "RUF"]
ignore = ["B028"]

[tool.ruff.lint.per-file-ignores]
"./rl_zoo3/import_envs.py" = ["F401"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.black]
line-length = 127

[tool.mypy]
ignore_missing_imports = true
follow_imports = "silent"
show_error_codes = true
exclude = """(?x)(
    tests/dummy_env/*$
  )"""

[tool.pytest.ini_options]
env = ["PYTHONHASHSEED=0"]
filterwarnings = [
    "ignore::DeprecationWarning:tensorboard",
    "ignore::UserWarning:gym",
]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.coverage.run]
disable_warnings = ["couldnt-parse"]
branch = false
omit = [
    "tests/*",
    "setup.py",
    "rl_zoo3/plots/*",
    "rl_zoo3/push_to_hub.py",
    "scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError()",
    "if typing.TYPE_CHECKING:",
]

[tool.uv.sources]
jumanji = { git = "https://github.com/jjakubassa/jumanji.git", branch = "thesis_v2" }
stable-baselines3 = { git = "https://github.com/jjakubassa/stable-baselines3" }

[dependency-groups]
all = ["jumanji"]
mandl = ["jumanji"]
